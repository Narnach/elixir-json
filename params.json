{"name":"Elixir JSON","tagline":"Native JSON library for Elixir","body":"# Elixir JSON\r\n\r\n[![Build Status](https://travis-ci.org/cblage/elixir-json.png?branch=master)](https://travis-ci.org/cblage/elixir-json)\r\n\r\nThis library provides a natively implemented JSON encoder and decoder for Elixir.\r\n\r\nAll contributions are welcome.\r\n## Installing\r\n\r\nSimply add ```{ :json, github: \"cblage/elixir-json\"}``` to your project's ```mix.exs``` file, in the dependencies list and run ```mix deps.get json```.\r\n\r\n### Example for a project that already uses [Dynamo](https://github.com/elixir-lang/dynamo):\r\n```elixir\r\ndefp deps do\r\n    [ { :cowboy, github: \"extend/cowboy\" },\r\n      { :dynamo, github: \"elixir-lang/dynamo\" },\r\n      { :json,   github: \"cblage/elixir-json\"} ]\r\nend\r\n```\r\n\r\n## Usage\r\n\r\n```elixir\r\n  JSON.encode([result: \"this will be a elixir result\"])\r\n  {:ok, \"{\\\"result\\\":\\\"this will be a elixir result\\\"}\"}\r\n```\r\n\r\n```elixir\r\n  JSON.decode(\"{\\\"result\\\":\\\"this will be a elixir result\\\"}\")\r\n  {:ok, [result: \"this will be a elixir result\"]}\r\n```\r\n\r\n## Dynamo Filter\r\n\r\nElixir JSON includes a convenient filter for the [Dynamo](https://github.com/elixir-lang/dynamo) web framework.\r\n\r\nIf you want to use it, simply add Elixir JSON to your project's dependencies, and add the following line to your router:\r\n```elixir\r\nfilter JSON.Dynamo.Filter\r\n```\r\n\r\nAfterwards, to generate JSON responses, simply use ```conn.put_private``` and set the ```:result_object``` to whatever you want to be converted to JSON:\r\n```elixir\r\n  get \"/whoami\" do\r\n    conn.put_private :result_object, [ name: \"Carlos\", city: \"New York\", likes: \"Programming\" ]\r\n  end\r\n```\r\n\r\n\r\n## License\r\nThe Elixir JSON library is available under the [BSD 3-Clause aka \"BSD New\" license](http://www.tldrlegal.com/l/BSD3)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}